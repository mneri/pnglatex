#!/bin/bash

# This file is part of pnglatex <https://github.com/mneri/pnglatex>.
# Copyright Massimo Neri <hello@mneri.me> and all the contributors.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

HELP=
SESSION=
UNAME=
SILENT=0
SHOWVERSION=
declare -r VERSION=0.13

function failure {
    if [ ! -t 1 ]; then
	notify-send -i image-missing "pnglatex" "Could not generate the image: invalid formula"
    fi
}

function generate {
    local TMPFILE
    
    if [ -z "$SESSION" ]; then
	SESSION=$(session)
    fi

    if [ "$SESSION" != "wayland" ] && [ "$SESSION" != "x11" ] && [ "$SESSION" != "WindowServer" ]; then
	echo "Unsupported session: $SESSION" >&2
	exit 1
    fi
    
    if [ "$SESSION" = "wayland" ]; then
	TMPFILE=$(wl-paste | pnglatex)
	wl-copy < "$TMPFILE" > /dev/null 2>&1
    elif [ "$SESSION" = "x11" ]; then
	TMPFILE=$(xclip -o | pnglatex)
	xclip -selection clipboard -t image/png -i "$TMPFILE" > /dev/null 2>&1
    elif [ "$SESSION" = "WindowServer" ]; then
	    TMPFILE=$(pbpaste | pnglatex)
	    osascript -e "set the clipboard to (read (POSIX file \"$TMPFILE\") as JPEG picture)" 
    fi

    if [ -f "$TMPFILE" ]; then
	success
	rm "$TMPFILE"
    else
	failure
	exit 1
    fi
}

function main {
    parse "$@"

    if [ "$HELP" = 1 ]; then
	usage
	exit 0
    fi

    if [ "$SHOWVERSION" = 1 ]; then
	version
	exit 0
    fi

    generate
}

function parse {
    while getopts hs:Sv ARG; do
	case $ARG in
	    h)
		HELP=1
		;;
	    s)
		SESSION=$OPTARG
		;;
	    S)
		SILENT=1
		;;
	    v)
		SHOWVERSION=1
		;;
	    ?)
	        exit 1
	esac
    done
}

function session {
    if [ "$(uname)" = "Darwin" ]; then
	    echo WindowServer
    else
	    loginctl | grep $(id -u) | awk '/tty/ {print $1}' | xargs loginctl show-session -p Type | awk -F= '{print $2}'
    fi
}

function success {
    if [ "$SILENT" == 0 ] && [ ! -t 1 ]; then
	notify-send -i image-x-generic "pnglatex" "Image copied to the system clipboard"
    fi
}

function usage {
    echo "cliptex $VERSION - Generate a formula from the system clipboard."
    echo "Copyright Massimo Neri <hello@mneri.me> and all the contributors."
    echo
    echo "List of options:"
    echo "  -h           Print this help message."
    echo "  -s <session> Force a session (wayland or x11)."
    echo "  -S           Don't show system notifications."
    echo "  -v           Show version."
    echo
    echo "Examples:"
    echo "  cliptex"
    echo "  cliptex -s x11"
}

function version {
    echo $VERSION
}

main "$@"
